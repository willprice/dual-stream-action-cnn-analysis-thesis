A conference version of this paper is accepted at ECCV’16 for oral presentation

arXiv:1608.00507v1 [cs.CV] 1 Aug 2016

Top-down Neural Attention by Excitation
Backprop
Jianming Zhang1,2 , Zhe Lin2 , Jonathan Brandt2 , Xiaohui Shen2 , Stan Sclaroff1
1
Boston University
{jmzhang,sclaroff}@bu.edu
2
Adobe Research
{zlin,jbrandt,xshen}@adobe.com

Abstract. We aim to model the top-down attention of a Convolutional
Neural Network (CNN) classifier for generating task-specific attention
maps. Inspired by a top-down human visual attention model, we propose a new backpropagation scheme, called Excitation Backprop, to pass
along top-down signals downwards in the network hierarchy via a probabilistic Winner-Take-All process. Furthermore, we introduce the concept
of contrastive attention to make the top-down attention maps more discriminative. In experiments, we demonstrate the accuracy and generalizability of our method in weakly supervised localization tasks on the MS
COCO, PASCAL VOC07 and ImageNet datasets. The usefulness of our
method is further validated in the text-to-region association task. On the
Flickr30k Entities dataset, we achieve promising performance in phrase
localization by leveraging the top-down attention of a CNN model that
has been trained on weakly labeled web images.

1

Introduction

Top-down task-driven attention is an important mechanism for efficient visual
search. Various top-down attention models have been proposed, e.g. [1,2,3,4].
Among them, the Selective Tuning attention model [3] provides a biologically
plausible formulation. Assuming a pyramidal neural network for visual processing, the Selective Tuning model is composed of a bottom-up sweep of the network
to process input stimuli, and a top-down Winner-Take-ALL (WTA) process to
localize the most relevant neurons in the network for a given top-down signal.
Inspired by the Selective Tuning model, we propose a top-down attention
formulation for modern CNN classifiers. Instead of the deterministic WTA process used in [3], which can only generate binary attention maps, we formulate
the top-down attention of a CNN classifier as a probabilistic WTA process.
The probabilistic WTA formulation is realized by a novel backpropagation
scheme, called Excitation Backprop, which integrates both top-down and bottomup information to compute the winning probability of each neuron efficiently.
Interpretable attention maps can be generated by Excitation Backprop at intermediate convolutional layers, thus avoiding the need to perform a complete

2

J. Zhang et al.
Input

chair

glass

boy

woman

man

couple

father

Fig. 1. A CNN classifier’s top-down attention maps generated by our Excitation Backprop can localize common object categories, e.g. chair and glass, as well as finegrained categories like boy, man and woman in this example image, which is resized to
224×224 for our method. The classifier used in this example is trained to predict ∼18K
tags using only weakly labeled web images. Visualizing the classifier’s top-down attention can also help interpret what has been learned by the classifier. For couple, we can
tell that our classifier uses the two adults in the image as the evidence, while for father,
it mostly concentrates on the child. This indicates that the classifier’s understanding
of father may strongly relate to the presence of a child.

backward sweep. We further introduce the concept of contrastive top-down attention, which captures the differential effect between a pair of contrastive topdown signals. The contrastive top-down attention can significantly improve the
discriminativeness of the generated attention maps.
In experiments, our method achieves superior weakly supervised localization
performance vs. [5,6,7,8,9] on challenging datasets such as PASCAL VOC [10]
and MS COCO [11]. We further explore the scalability of our method for localizing a large number of visual concepts. For this purpose, we train a CNN tag
classifier to predict ∼18K tags using 6M weakly labeled web images. By leveraging our top-down attention model, our image tag classifier can be used to localize
a variety of visual concepts. Moreover, our method can also help to understand
what has been learned by our tag classifier. Some examples are shown in Fig. 1.
The performance of our large-scale tag localization method is evaluated on
the challenging Flickr30k Entities dataset [12]. Without using a language model
or any localization supervision, our top-down attention based approach achieves
competitive phrase-to-region performance vs. a fully-supervised baseline [12].
To summarize, the main contributions of this paper are:
– a top-down attention model for CNN based on a probabilistic Winner-TakeAll process using a novel Excitation Backprop scheme;
– a contrastive top-down attention formulation for enhancing the discriminativeness of attention maps; and
– a large-scale empirical exploration of weakly supervised text-to-region association by leveraging the top-down neural attention model.

2

Related Work

There is a rich literature about modeling the top-down influences on selective
attention in the human visual system (see [13] for a review). It is hypothesized

Top-down Neural Attention by Excitation Backprop

3

that top-down factors like knowledge, expectations and behavioral goals can
affect the feature and location expectancy in visual processing [4,14,1,15], and
bias the competition among the neurons [16,3,15,17,18]. Our attention model
is related to the Selective Tuning model of [3], which proposes a biologically
inspired attention model using a top-down WTA inference process.
Various methods have been proposed for grounding a CNN classifier’s prediction [5,6,7,8,19,9]. In [5,6,20], error backpropagation based methods are used
for visualizing relevant regions for a predicted class or the activation of a hidden
neuron. Recently, a layer-wise relevance backpropagation method is proposed
by [9] to provide a pixel-level explanation of CNNs’ classification decisions. Cao
et al. [7] propose a feedback CNN architecture for capturing the top-down attention mechanism that can successfully identify task relevant regions. In [19],
it is shown that replacing fully-connected layers with an average pooling layer
can help generate coarse class activation maps that highlight task relevant regions. Unlike these previous methods, our top-down attention model is based
on the WTA principle, and has an interpretable probabilistic formulation. Our
method is also conceptually simpler than [7,19] as we do not require modifying
a network’s architecture or additional training. The ultimate goal of our method
goes beyond visualization and explanation of a classifier’s decision [6,20,9], as we
aim to maneuver CNNs’ top-down attention to generate highly discriminative
attention maps for the benefits of localization.
Training CNN models for weak supervised localization has been studied by
[21,22,23,24,25]. In [21,25,24], a CNN model is transformed into a fully convolutional net to perform efficient sliding window inference, and then Multiple
Instance Learning (MIL) is integrated in the training process through various
pooling methods over the confidence score map. Due to the large receptive field
and stride of the output layer, the resultant score maps only provide very coarse
location information. To overcome this issue, a variety of strategies, e.g. image
re-scaling and shifting, have been proposed to increase the granularity of the
score maps [21,24,26]. Image and object priors are also leveraged to improve
the object localization accuracy in [22,23,24]. Compared with weakly supervised
localization, the problem setting of our task is essentially different. We assume
a pre-trained deep CNN model is given, which may not use any dedicated training process or model architecture for the purpose of localization. Our focus,
instead, is to model the top-down attention mechanism of generic CNN models
to produce interpretable and useful task-relevant attention maps.

3
3.1

Method
Top-down Neural Attention based on Probabilistic WTA

We consider a generic feedforward neural network model. The goal of a top-down
attention model is to identify the task-relevant neurons in the network.
Given a selected output unit, a deterministic top-down WTA scheme is used
in the biologically inspired Selective Tuning model [3] to localize the most relevant neurons in the processing cone (see Fig. 2 (a)) and generate a binary

4

J. Zhang et al.
aj
P(ai | a j )
ai

(a) Deterministic WTA

(b) Probabilistic WTA

(c) Winner Sampling

Fig. 2. Deterministic WTA [3] vs. our probabilistic WTA for modeling top-down attention. (a) Given a selected output unit, the red dots denote the winners identified by the
top-down layer-wise deterministic WTA scheme in the processing cone, and the cyan
ones are inhibited. (b) In our probabilistic WTA scheme, winner neurons are generated
by a stochastic sampling process (shown in (c)). The top-down signal is specified by
a probability distribution over the output units. The shading of a dot in (b) indicates
the its relative likelihood of winning against the other ones in the same layer.

attention map. Inspired by the deterministic WTA, we propose a probabilistic
WTA formulation to model a neural network’s top-down attention (Fig. 2 (b)
and (c)), which leverages more information in the network and generates soft
attention maps that can capture subtle differences between top-down signals.
This is critical to our contrastive attention formulation in Sec. 3.3.
In our formulation, the top-down signal is specified by a prior distribution
P (A0 ) over the output units, which can model the uncertainty in the top-down
control process. Then the winner neurons are recursively sampled in a topdown fashion based on a conditional winning probability P (At |At−1 ), where
At , At−1 ∈ N denote the selected winner neuron at the current and the previous
step respectively, and N is the overall neuron set. We formulate the top-down
relevance of each neuron as its probability of being selected as a winner in this
process. Formally, given a neuron aj ∈ N (note that aj denotes a specific neuron and At denotes a variable over the neurons), we would like to compute its
Marginal Winning Probability (MWP) P (aj ). The MWP P (aj ) can be factorized
as
X
P (aj ) =
P (aj |ai )P (ai ),
(1)
ai ∈Pj

where Pj is the parent node set of aj (in top-down order). As Eqn. 1 indicates,
given P (aj |ai ), P (aj ) is a function of the marginal winning probability of the
parent nodes in the preceding layers. It follows that P (aj ) can be computed in
a top-down layer-wise fashion.
Our formulation is equivalent to an absorbing Markov chain process [27]. A
Markov Chain is an absorbing chain if 1) there is at least one absorbing state
and 2) it is possible to go from any state to at least one absorbing state in
a finite number of steps. Any walk will eventually end at one of the absorbing states. Non-absorbing states are called Transient States. For an absorbing
Markov Chain, the canonical form of the transition matrix P can be represented

Top-down Neural Attention by Excitation Backprop

5

by

P =

Q
0

R
Ir


,

(2)

where the entry pij is the the transition probability from state i to j. Each row
sums up to one and Ir is an r × r matrix corresponding to the r absorbing states.
In our formulation, each random walk starts from an output neuron and ends at
some absorbing node of the bottom layer in the network; and pij := P (aj |ai ) is
the transition probability.
The fundamental matrix of the absorbing Markov chain process is
N=

∞
X

Qk = (It − Q)−1 ,

(3)

k=0

The (i, j) entry of N can be interpreted as the the expected number of visits to
node j, given that the walker starts at i. In our formulation, the MWP P (aj ) can
then be interpreted as the expected number of visits when a walker starts from
a random node of the output layer according to P (A0 ). This expected number of
visits can be computed by a simple matrix multiplication using the fundamental
matrix of the absorbing Markov chain. In this light, the MWP P (ai ) is a linear
function of the the top-down signal P (A0 ), which will be shown to be convenient
later (see Sec. 3.3). In practice, our Excitation Backprop does the computation
in a layer-wise fashion, without the need to explicitly construct the fundamental
matrix. This layer-wise propagation is possible due to the acyclic nature of the
feedforward network.
3.2

Excitation Backprop

In this section, we propose the Excitation Backprop method to realize the probabilistic WTA formulation for modern CNN models.
A modern CNN model [28,29,30] is mostly
P composed of a basic type of neuron
ai , whose response is computed by b
ai = ϕ( j wji b
aj +bj ). Here wji is the weight,
b
aj is the input, bj is the bias and ϕ is the nonlinear activation function. We call
this type of neuron an Activation Neuron. We have the following assumptions
about the activation neurons.
A1. The response of the activation neuron is non-negative.
A2. An activation neuron is tuned to detect certain visual features. Its response
is positively correlated to its confidence of the detection.
A1 holds for a majority of the modern CNN models, as they adopt the
Rectified Linear Unit (ReLU) as the activation function. A2 has been empirically
verified by many recent works [19,6,31,32]. It is observed that neurons at lower
layers detect simple features like edge and color, while neurons at higher layers
can detect complex features like objects and body parts.
Between activation neurons, we define a connection to be excitatory if its
weight is non-negative, and inhibitory otherwise. Our Excitation Backprop passes

6

J. Zhang et al.
tabby cat

pool5

pool4

pool3

pool2

pool1

Fig. 3. Example Marginal Winning Probability (MWP) maps computed via Excitation
Backprop from different layers of the public VGG16 model [29] trained on ImageNet.
The input image is shown on the right. The MWP maps are generated for the category
tabby cat. Neurons at higher-level layers have larger receptive fields and strides. Thus,
they can capture larger areas but with lower spatial accuracy. Neurons at lower layers
tend to more precisely localize features at smaller scale.

top-down signals through excitatory connections between activation neurons.
Formally, let Ci denote the child node set of ai (in the top-down order). For each
aj ∈ Ci , the conditional winning probability P (aj |ai ) is defined as
(
Zi b
aj wji if wji ≥ 0,
P (aj |ai ) =
(4)
0
otherwise.
P
P
Zi = 1/ j:wji ≥0 b
aj wji is a normalization factor so that aj ∈Ci P (aj |ai ) = 1.
P
In the special case when j:wji ≥0 b
aj wji = 0, we define Zj to be 0. Note that
the formulation of P (aj |ai ) is valid due to A1, since b
aj is always non-negative.
Eqn. 4 assumes that if ai is a winner neuron, the next winner neuron will
be sampled among its child node set Ci based on the connection weight wji and
the input neuron’s response b
aj . The weight wji captures the top-down feature
expectancy, while b
aj represents the bottom-up feature strength, as assumed in
A2. Due to A1, child neurons of ai with negative connection weights always
have an inhibitory effect on ai , and thus are excluded from the competition.
Eqn. 4 recursively propagates the top-down signal layer by layer, and we
can compute attention maps from any intermediate convolutional layer. For our
method, we simply take the sum across channels to generate a marginal winning
probability (MWP) map as our attention map, which is a 2D probability histogram. Fig. 3 shows some example MWP maps generated using the pre-trained
VGG16 model [29]. Neurons at higher-level layers have larger receptive fields and
strides. Thus, they can capture larger areas but with lower spatial accuracy.
Neurons at lower layers tend to more precisely localize features at smaller scales.
For a class of activation functions that is lower bounded, e.g. the sigmoid
function, tanh function and the Exponential Linear Unit (ELU) function [33],
we can slightly modify our formulation of Excitation Backprop. Suppose λ is the
minimum value in the range of the activation function. The modified formulation
corresponding to Eqn. 4 in our paper is
(
Zi (b
aj + λ)wji if wji ≥ 0,
P (aj |ai ) =
(5)
0
otherwise.

Top-down Neural Attention by Excitation Backprop
zebra

Input

elephant

zebra

MWP

7

elephant

c-MWP

Fig. 4. Marginal Winning Probability (MWP) vs. contrastive MWP (c-MWP). The
input image is resized to 224×224, and we use GoogleNet pretrained on ImageNet
to generate the MWP maps and c-MWP maps for zebra and elephant. The MWP
map for elephant does not successfully suppress the zebra. In contrast, by cancelling
out common winner neurons for elephant and non-elephant, the c-MWP map more
effectively highlights the elephant.

Because b
aj + λ ≥ 0 , our probability formulation still holds.
3.3

Contrastive Top-down Attention

Since the MWP is a linear function of the top-down signal (see Sec. 3.1), we can
compute any linear combination of MWP maps for an image by a single backward
pass. All we need to do is linearly combine the top-down signal vectors at the
top layer before performing the Excitation Backprop. In this section, we take
advantage of this property to generate highly discriminative top-down attention
maps by passing down pairs of contrastive signals.
For each output unit oi , we virtually construct a dual unit ōi , whose input weights are the negation of those of oi . For example, if an output unit
corresponds to an elephant classifier, then its dual unit will correspond to a
non-elephant classifier. Subtracting the MWP map for non-elephant from
the one for elephant will cancel out common winner neurons and amplify the
discriminative neurons for elephant. We call the resulting map a contrastive
MWP map, which can be computed by a single backward pass. Fig. 4 shows
some examples.
Formally, let W1 be the weights of the top layer, and P1 be the corresponding transition matrix whose entries are the conditional probabilities defined by
Eqn. 4. Suppose the number of the neurons at the top is m and at the next lower
layer is n, and P1 is a m × n matrix.
The weights of the contrastive output units are the negation of the original weights at the top layer, namely −W1 . Let P̄1 denote the corresponding
transition matrix. Regarding P̄1 , the entries that are positive were previously
thresholded in P1 according to Eqn. 4 and vise versa. For example, pij > 0 in
P1 indicates p̄ij = 0 in P̄1 .
The MWP of a target layer, say the n-th layer from the top, is formulated as
C = P0 · P1 · P2 · . . . · Pn−1 ,

(6)

8

J. Zhang et al.

and the dual MWP for the contrastive output units is
C̄ = P0 · P̄1 · P2 · . . . · Pn−1 ,

(7)

where P0 is the input top-down signal in the form of a horizontal vector. The
resultant contrastive MWP is formulated as
C − C̄ = P0 · (P1 − P̄1 ) · P2 · . . . · Pn−1 .

(8)

In practice, we compute P0 · P1 and P0 · P̄1 respectively by Excitation Backprop. Then, we do the subtraction and propagate the contrastive signals P0 ·
(P1 − P̄1 ) downwards by Excitation Backprop again. Moreover, we truncate the
contrastive MWP map at zero so that only positive parts are kept. Our probabilistic formulation ensures that there are always some positive parts on the
contrastive MWP map, unless the MWP map and its dual are identical.
3.4

Implementation of Excitation Backprop

We implement Excitation Backprop in Caffe [34] (available at our project website3 ). In the following, we describe the implementation of Excitation Backprop
for common layers in modern CNNs.
ReLU Layer: The ReLU layer serves as a neuron-wise gating function. The
top-down signals remain the same after a ReLU layer in Excitation Backprop,
since each ReLU neuron only has a single child node. Neurons with zero activation values will not be selected as winning neurons due to Eqn. 4 in our paper.
Thus, the propagation method for ReLU is the same as error backpropagation.
Max Pooling Layer: Again, as in error backpropagation, signals are copied
to the lower layer through the pooling mask, because each pooled neuron has
only a single child node. Therefore, the propagation method for the Max Pooling
layer is the same as error backpropagation, too.
Convolutional, fully-connected and Average Pooling Layers: Convolutional, fully-connected and average pooling layers can be regarded as the
same type of layers that perform an affine transform of the response values of
the bottom (input) neurons. The implementation of Excitation Backprop for
these layers exactly follows Eqns. 1 and 4 in our paper. Let pij := P (aj |ai ) and
pj := P (aj ) for convenience, and we have:
pj =

X

pij pi

i∈Pj

=

X

+
Zi b
aj wji
pi

i∈Pj

=b
aj

X
i∈Pj

3

1
,
+
ak
k∈Ci wki b

+
wji
pi P

http://www.cs.bu.edu/groups/ivc/excitation-backprop

(9)

Top-down Neural Attention by Excitation Backprop

9

Alg. 1 Excitation Backprop for the Convolutional Layer
input

output

: An : bottom activation responses;
W : weight parameters;
Pn−1 : top MWP
: Pn : bottom MWP

1

compute W + by thresholding W at zero

2

compute
compute
compute
compute

3
4
5

T

X = W + An in Eqn. 10 (a forward layer operation in Caffe)
Y = Pn−1 X by element-wise division
Z = W + Y (a backward layer operation in Caffe)
Pn = An Z by element-wise multiplication

+
where wji
= max{wji , 0}, Pi is the parent node set of aj and Ci is the child
node set of ai (in top-down order). The computation of all pj in a layer can be
performed by matrix operations:



T
Pn = A n
W + Pn−1 (W + An ) ,
(10)

where Pn−1 and Pn denote the Marginal Winning Probability (MWP) for
 the
 top
+
neurons and the bottom neurons of the layer respectively, and W + = wij
d1 ,d2
is a d1 × d2 weight matrix representing the excitatory connection weight of the
layer. d1 (d2 ) equals the number of the bottom (top) neurons. An is the response
value of the bottom neurons. Note that we assume that the response values of the
bottom neurons are non-negative; thus, we do not propagate the top-down signals
to the mean-subtracted pixel layer, which may contain negative pixel values.
Moreover, and are the element-wise multiplication and division respectively.
Alg. 1 summarizes the steps of Excitation Backprop for the convolutional layer.
Local Response Normalization (LRN) Layer. Special care should be
taken for the LRN layer, whose response is computed element-wise as m
b i = si b
ai ,
where si is a positively valued scaling factor computed based on the neighboring
neurons’ response. The LRN layer locally normalizes each neuron’s response.
In Excitation Backprop, we just ignore the normalization factor, and thus each
neuron mi of the LRN layer has only one child node ai in the top-down propagation process. As a result, the top-down signals remain the same when passing
through the LRN layer.

4
4.1

Experiments
The Pointing Game

The goal of this section is to evaluate the discriminativeness of different topdown attention maps for localizing target objects in crowded visual scenes.
Evaluation setting. Given a pre-trained CNN classifier, we test different
methods in generating a top-down attention map for a target object category
present in an image. Ground truth object labels are used to cue the method. We

10

J. Zhang et al.

extract the maximum point on the top-down attention map. A hit is counted
if the maximum point lies on one of the annotated instances of the cued object
category, otherwise a miss is counted. We measure the localization accuracy
#Hits
by Acc = #Hits+#M
isses for each object category. The overall performance is
measured by the mean accuracy across different categories.
We call this the Pointing Game, as it asks the CNN model to point at an
object of designated category in the image. The pointing game does not require highlighting the full extent of an object, and it does not account for the
CNN model’s classification accuracy. Therefore, it purely compares the spatial
selectiveness of the top-down attention maps. Moreover, the pointing game only
involves minimum post-processing of the attention maps, so it can evaluate different types of attention maps more fairly.
Datasets. We use the test split of the PASCAL VOC07 dataset [10] (4952
images) and the validation split of the MS COCO dataset [11] (40137 images).
In particular, COCO contains 80 object categories, and many of its images
have multiple object categories, making even the simple Pointing Game rather
challenging. To evaluate success in the Pointing Game, we use the groundtruth
bounding boxes for VOC07 and the provided segmentation masks for COCO.
CNN classifiers. We consider three popular CNN architectures: CNN-S [35]
(an improved version of AlexNet [28]), VGG16 [29], and GoogleNet [30]. These
models vary a lot in depth and structure. We download these models from the
Caffe Model Zoo website4 . These models are pre-trained on ImageNet [36]. For
both VOC07 and COCO, we use the training split to fine-tune each model.
We follow the basic training procedure for image classification. Only the output
layer is fine-tuned using the multi-label cross-entropy loss for simplicity, since
the classification accuracy is not our focus. Images are padded to square shape
by mirror padding and up-sampled to 256×256. Random flipping and cropping
are used for data augmentation. No multi-scale training [21] is used. We fix the
learning rate to be 0.01 for all the architectures and optimize the parameters
using SGD. The training batch size is set as 64, 32 and 64 for VGGS, VGG16 and
GoogleNet respectively. We stop the training when the training error plateaus.
Test methods. We compare Excitation Backprop (MWP and c-MWP) with
the following methods: (Grad) the error backprogation method [5], (Deconv) the
deconvolution method originally designed for internal neuron visualization [6],
(LRP) layer-wise relevance propagation [9], and (CAM) the class activation map
method [8]. We implement Grad, Deconv and CAM in Caffe. For Deconv, we
use an improved version proposed in [20], which generates better maps than the
original version [6]. For Grad and Deconv, we follow [5] to use the maximum
absolute value across color channels to generate the final attention map. Taking
the mean instead of maximum will degrade their performance. For LRP, we use
the software provided by the authors, which only supports CPU computation.
For VGG16, this software can take 30s to generate an attention map on an Intel
4

https://github.com/BVLC/caffe/wiki/Model-Zoo

Top-down Neural Attention by Excitation Backprop

11

Table 1. Mean accuracy (%) in the Pointing Game. For each method, we report two
scores for the overall test set and a difficult subset respectively. Center is the baseline
that points at image center. The second best score of each column is underlined.
VOC07 Test (All/Diff.)

COCO Val. (All/Diff.)

CNN-S

VGG16

GoogleNet

CNN-S

VGG16

GoogleNet

69.5/42.6

69.5/42.6

69.5/42.6

27.7/19.4

27.7/19.4

27.7/19.4

78.6/59.8
73.1/45.9
68.1/41.3
-

76.0/56.8
75.5/52.8
-

79.3/61.4
74.3/49.4
72.8/50.2
80.8/61.9

38.7/30.1
36.4/28.4
32.5/24.0
-

37.1/30.7
38.6/30.8
-

42.6/36.3
35.7/27.9
40.2/32.7
41.6/35.0

MWP 73.7/52.9
c-MWP 78.7/61.7

76.9/55.1
80.0/66.8

79.3/60.4
85.1/72.3

35.0/27.7
43.0/37.0

39.5/32.5
49.6/44.2

43.6/37.1
53.8/48.3

Center
Grad
Deconv
LRP
CAM

[5]
[6]
[9]
[8]

Xeon 2.90GHz×6 machine5 . Due to limited computational resources, we only
evaluate LRP for CNN-S and GoogleNet.
Note that CAM is only applicable to certain architectures like GoogleNet,
which do not have fully connected layers. At test time, it acts like a fully convolutional model to perform dense sliding window evaluation [21,37]. Therefore, the
comparison with CAM encompasses the comparison with the dense evaluation
approach for weakly supervised localization [21].
To generate the full attention maps for images of arbitrary aspect ratios, we
convert each testing CNN classifier to a fully convolutional architecture as in
[21]. All the compared methods can be easily extended to fully convolutional
models. In particular, for Excitation Backprop, Grad and Deconv, the output
confidence map of the target category is used as the top-down signal to capture
the spatial weighting. However, all input images are resized to 224 in the smaller
dimension, and no multi-scale processing is used.
For different CNN classifiers, we empirically select different layers to compute
our attention maps based on a held-out set. We use the conv5 layer for CNN-S,
pool4 for VGG16 and pool2 for GoogleNet. We use bicubic interpolation to upsample the generated attention maps. The effect of the layer selection will be
analysed below. For Grad, Deconv and LRP we blur their maps by a Gaussian
kernel with σ = 0.02 · max{W, H}, which slightly improves their performance
since their maps tend to be sparse and noisy at the pixel level. In the evaluation,
we expand the groundtruth region by a tolerance margin of 15 pixels, so that
the attention maps produced by CAM, which are only 7 pixels in the shortest
dimension, can be more fairly compared.
Results. The results are reported in Table 1. As the pointing game is trivial
for images with large dominant objects, we also report the performance on a
difficult subset of images for each category. The difficult set includes images that
meet two criteria: 1) the total area of bounding boxes (or segments in COCO)
of the testing category is smaller than 1/4 the size of the image and 2) there is
at least one other distracter category in the image.
5

On COCO, we need to compute about 116K attention maps, which leads to over
950 hours of computation on a single machine for LRP using VGG16.

J. Zhang et al.
Grad

GT

fire hydrant
skis

CAM

dog

c-MWP

sink

frisbee

GT

c-MWP

CAM

Grad

stop sign

12

Fig. 5. Example attention maps using GoogleNet. For visualization, the maps are
superimposed on the images after some postprocessing (slight blur for Grad and thresholding for CAM). (Top two rows) Our c-MWP is very discriminative and can often localize challengingly small objects like frisbee, stop sign and fire hydrant. (Bottom
row ) Two typical failure cases of top-down neural attention are shown. Since faucet
often co-occurs with sink, the CNN’s attention falsely focuses on the faucet in the
image. It is the same case for ski poles and skis.

Our c-MWP consistently outperforms the other methods on both VOC07 and
COCO across different CNN models. c-MWP is also substantially better than
MWP, which validates the idea of contrastive attention. GoogleNet provides
the best localization performance for different methods, which is also observed
by [7,8]. Using GoogleNet, our c-MWP outperforms the second best method
by about 10 percentage points on the difficult sets of VOC07 and COCO. In
particular, we find that our c-MWP gives the best performance in 69/80 object
categories of COCO, especially for small objects like remote, tie and baseball
bat.
Example attention maps are shown in Fig. 10. As we can see, our c-MWP
maps can accurately localize the cued objects in rather challenging scenes.
Layer selection effects. We use GoogleNet to analyze the effects of layer
selection. For a comparison, we also report the performance of Grad and Deconv by taking the maximum gradient magnitude across feature map channels
in the intermediate layers. Results are reported in Fig. 6. We choose three intermediate layers in GoogleNet: pool1, pool3 and Inception 5b/output (I5b/out),
whose spatial resolutions are 56, 14 and 7 in the shortest dimension respectively.
Performance does not vary much across all methods at the chosen layers except
I5b/out. Our c-MWP only gets a slight decrease in accuracy (mainly due to the
map’s low spatial resolution), while Grad and Deconv do not generate meaningful attention maps (see Fig. 6). This is because the attention maps of Grad and
Deconv at I5b/out are not conditioned on the activation values of I5b/out, and
thus fail to leverage the spatial information captured by I5b/out.
Analysis of contrastive top-down attention. The proposed contrastive
attention is conceptually simple, which basically subtracts one attention map

Top-down Neural Attention by Excitation Backprop
bottle

13

dog

Layer Selection Eﬀects
Mean Accuracy

80%

Deconv

Grad

cMWP

Ours

60%
40%
20%
0%

pixel
(224)

pool1
(56)

pool3 I5b/out
(14)
(7)

input

Grad

Fig. 6. Effects of layer selection on VOC07 difficult set. (Left) For Grad, Deconv
and our c-MWP, we compare their attention maps from three different layers in the
GoogleNet. At I5b/out, Grad and Deconv fail to generate meaningful attention maps,
while our method can still achieve reasonable accuracy. (Right) We show example attention maps by our c-MWP and Grad from the I5b/out layer.
Table 2. Analysis of contrastive attention on VOC07 difficult set using GoogleNet.
We evaluate two variants of Excitation Backprop for the contrastive attention map
computation compared with our full model. We also test the contrastive attention idea
for Grad, Deconv and CAM and their original scores are shown in brackets. See text
for details.
Excitation Backprop
Mean Acc. (%)

full
70.6

post-norm
58.1

w/o norm
41.6

Other Methods
c-Grad
N.A.

c-Deconv
67.7 (49.4)

c-CAM
61.9 (61.9)

from its dual using the virtual contrastive output unit. We test this idea for
Grad, Deconv and CAM and the performance is reported in Table 2. For Grad,
the gradient magnitude map is identical to its dual since the gradients of the dual
map are just the negation of the reference map. As a result, the subtraction gives
a zero map. For CAM, the performance remains the same because the dual map
is again a negation of the reference attention map and the maximum point will
not be changed by the subtraction. However, the proposed contrastive attention
works for Deconv, when the attention map and its dual are L1-normalized before
subtraction. Deconv shares a similar spirit of our method as it discards negative/inhibitatory signals by thresholding at ReLU layers, but it also introduces
non-linearity in the propagation process. Therefore, it requires two backward
passes and proper normalization, while our method can directly propagate the
contrastive signal via a single pass and achieves better performance.
Our probabilistic WTA formulation produces well-normalized attention maps
that enable direct subtraction. We report the performance of two variants of our
method in Table 2. We remove the normalization factor Zi in Eqn. 4 and pass
down the contrastive signal. This leads to a significant degradation in performance (w/o norm). Then we compute the attention map and its dual separately
and do the subtraction after L1-normalization (post-norm). The performance is
improved but still substantially lower than our full method. This analysis further
confirms the importance of our probabilistic formulation.

14

J. Zhang et al.

Table 3. Bounding box localization error on ImagNet Val. using GoogleNet. ∗ The
score of Feedback is from the original paper.

Opt. α
Loc. Error (%)

4.2

Grad [5] Deconv [6] LRP [9] CAM [8] Feedback∗ [7] c-MWP
5.0
4.5
1.0
1.0
0.0
41.6
41.6
57.8
48.1
38.8
57.0

MWP
1.5
38.7

Localizing Dominant Objects

We now turn to a different evaluation setting [7]. The goal of this setting is
bounding box (bbox) localization of dominant objects in the image.
Dataset and evaluation. We follow the protocol of Feedback Net [7] for a
fair comparison. The test is performed on the ImageNet Val. set (∼50K images),
where each image has a label representing the category of dominant objects in
it. The label is given, so the evaluation is based on the localization error rate
with an IOU threshold at 0.5. Images are resized to 224×224.
As in [7], simple thresholding is used to extract a bbox from an attention
map. We set the threshold τ = αµI , where µI is the mean value of the map.
Then the tightest bbox covering the white pixels is extracted. The parameter α
is optimized in the range [0 : 0.5 : 10] for each method on a held out set.
Results. Table 3 reports the results based on the same GoogleNet model
obtained from Caffe Model Zoo as in [7]. We find that c-MWP performs poorly,
but our MWP obtains competitive results against Feedback and other methods. Compared with Feedback, our method is conceptually much simpler. Feedback requires modification of a CNN’s architecture and needs 10-50 iterations of
forward-backward passes for computing an attention map.
Note that this task favors attention maps that fully cover the dominant object in an image. Thus, it is very different from the Pointing Game, which favors
discriminativeness instead. Our c-MWP usually only highlights the most discriminative part of an object due to the competition between the contrastive pair of
top-down signals. This experiment highlights the versatility of our method, and
the value of the non-contrastive version (MWP) for dominant object localization.
4.3

Text-to-Region Association

Text-to-region association in unconstrained images [12] is very challenging compared to the object detection task, due to the lack of fully-annotated datasets
and the large number of words/phrases used in the natural language. Moreover,
an image region can be referred to by potentially many different words/phrases,
which further increases the complexity of the fully-supervised approach.
By leveraging the top-down attention of a CNN image tag classifier, we propose a highly scalable approach to weakly supervised word-to-region association.
We train an image tag classifier using ∼6M weakly labeled thumbnail images collected from a commercial stock image website6 (Stock6M). Each image is 200pixels in the longest dimension and comes with about 30-50 user tags. These tags
6

https://stock.adobe.com

Top-down Neural Attention by Excitation Backprop

15

Table 4. Performance comparison on the Flickr30k Entities dataset. We report performance for both the whole dataset and a subset of small instances. The R@N refers
to the overall recall rate regardless of phrase types. mAP (Group) and mAP (Phrase)
should be interpreted differently, because most phrases belong to the group people.
CCA∗ refers to the precomputed results provided by [12], while CCA is the results
reported in the original paper. MCG base is the performance using MCG’s original
proposal scores. EB is EdgeBoxes [38].

MCG base
Grad (MCG)
Deconv (MCG)
LRP (MCG)
CAM (MCG)
MWP (MCG)
c-MWP (MCG)

opt. γ
–
0.50
0.50
0.50
0.75
0.50
0.50

R@1
10.7/ 7.7
24.3/ 7.6
21.5/11.3
24.3/11.8
21.7/ 6.5
28.5/15.0
26.2/21.2

R@5
30.3/22.4
49.6/32.9
48.4/34.5
51.6/36.8
47.1/27.9
52.7/39.1
54.3/43.4

R@10
40.5/30.3
59.7/45.8
58.5/46.0
61.3/48.5
56.1/39.1
61.3/49.8
62.2/51.7

mAP (Group)
6.9/ 4.5
10.2/ 3.8
10.0/ 4.0
10.3/ 4.3
7.5/ 2.0
11.8/ 5.3
15.2/10.8

mAP (Phrase)
16.8/12.9
28.8/15.6
26.5/16.7
28.9/18.1
26.0/11.9
31.1/20.3
30.8/24.0

CCA∗ [12] (EB)
CCA [12] (EB)
c-MWP (EB)

–
–
0.25

25.2/21.8
25.3/ –
27.0/18.4

50.3/41.0
–
49.9/35.2

58.1/47.3
59.7/ –
57.7/43.9

12.8/11.5
11.2/ –
13.2/ 8.1

28.8/23.6
–
29.4/20.0

cover a wide range of concepts, including objects, scenes, body parts, attributes,
activities, and abstract concepts, but are also very noisy. We picked ∼18K most
frequent tags for our dictionary. We empirically found that the first few tags of
each image are usually more relevant, and consequently use only the first 5 tags
of an image in the training.
Tag classifier training. We use the pre-trained GoogleNet model from
Caffe Model Zoo, and fine-tune the model using the multi-label cross-entropy
objective function for the 18K tags. Images are padded to square shape by mirror
padding and upsampled to 256×256. Random flipping and cropping are used for
data augmentation. We use SGD with a batch size of 64 and a starting learning
rate of 0.01. The learning rate is lowered by a factor of 0.1 when the validation
error plateaus. The training process passes through the data for three epochs
and takes ∼55 hours on an NVIDIA K40c GPU.
Dataset and evaluation. To quantitatively evaluate our top-down attention method and the baselines in text-to-region association, we use the recently
proposed Flickr30k Entities (Flickr30k) dataset [12]. Evaluation is performed on
the test split of Flickr30k (1000 images), where every image has five sentential
descriptions. Each Noun Phrase (NP) in a sentence is manually associated with
the bounding box (bbox) regions it refers to in the image. NPs are grouped into
eight types (see [12]). Given an NP, the task is to provide a list of scored bboxes,
which will be measured by the recall rate (similar to the object proposal metric)
or per-group/per-phrase Average Precision (AP) (similar to the object detection
metric). We use the evaluation code from [12].
To generate scored bboxes for an NP, we first compute the word attention
map for each word in the NP using our tag classifier. Images are resized to 300
pixels in the shortest dimension to better localize small objects. Then we simply
average the word attention maps to get an NP attention map. Advanced language
models can be used for better fusing the word attention maps, but we adopt

16

J. Zhang et al.

Table 5. Per group recall@5 (%) on the Flickr30k Entities dataset. The mean scores
are computed over different group types, which are different from the overall recall
rates reported in Table 4.

MCG base
Grad (MCG)
Deconv (MCG)
LRN (MCG)
CAM (MCG)
MWP (MCG)
c-MWP (MCG)

people
36.1
65.0
65.4
64.6
60.5
68.6
63.5

clothing
30.1
32.4
31.6
37.7
28.4
37.7
47.6

bodypart
9.9
14.0
18.7
16.4
9.6
16.1
24.5

animal
50.8
70.1
67.0
62.9
57.0
68.7
69.9

vehicle
37.8
63.0
64.0
63.5
57.5
66.3
72.0

instrument
26.5
40.7
46.9
45.7
37.0
53.7
54.3

scene
31.5
58.8
53.6
59.4
64.4
54.5
61.0

other
19.1
32.5
28.9
37.9
32.7
36.8
40.2

mean
30.3
47.1
47.0
48.5
43.4
50.3
54.1

CCA∗ [12] (EB)
c-MWP (EB)

63.6
62.8

43.7
35.0

22.9
17.6

57.0
65.1

69.0
73.5

50.6
58.6

45.0
53.2

36.2
36.2

48.5
50.3

the simplest fusion scheme to demonstrate the effectiveness of our top-down
attention model. We skip a small proportion of words that are not covered by
our 18K dictionary. MCG [39] is used to generate 500 segment proposals, which
are re-scored based on the phrase attention map. The re-scored segments are
then converted to bboxes, and redundant bboxes are removed via Non-maximum
Suppression using the IOU threshold of 0.7.
The segment scoring function is defined as f (R) = SR /AγR where SR is the
sum of the values inside the segment proposal R on the given attention map
and AR is the segment’s area. The parameter γ is to control the penalty of the
segment’s area, which is optimized for each method in the range [0 : 0.25 : 1].
Results. The recall rates and mAP scores are reported in Table 4. For our
method and the baselines, we additionally report the performance on a subset of
small instances whose bbox area is below 0.25 of the image size, as we find small
regions are much more difficult to localize. Our c-MWP consistently outperforms
all the attention map baselines across different metrics. In particular, the grouplevel mAP of our method is better than the second best by a large margin.
We also compare with a recent fully supervised method [12], which is trained
directly on the Flickr30k Entities dataset using CNN features. For fair comparison, we use the same bbox proposals used in [12], which are generated by
EdgeBoxes (EB) [38]. These proposals are pre-computed and provided by [12].
Our performance using EB is lower than using MCG, mainly due to the lower
accuracy of the EB’s bbox proposals. Compared with the segmentation proposals, the bbox proposals can also affect our ranking function for small and thin
objects. However, our method still attains competitive performance against [12].
Note that our method is weakly supervised and does not use any training data
from the Flickr30k Entities dataset.
We further report the per-group Recall@5 score in Table 5. Our method
achieves promising results in many group types, e.g. vehicle and instrument.
Note that the fully supervised CCA (EB) [12] gives significantly worse performance than c-MWP (EB) in animal, vehicle and instrument, which are the
three rarest types in the Flickr30k Entities dataset. This again shows the limitation of fully-supervised approaches due to the lack of fully-annotated data.

Top-down Neural Attention by Excitation Backprop
Input

lady

running

cone

A young lady wearing blue and black is running past an orange cone.

Input

woman

jumping

celebration

An asian woman is jumping in celebration in a park outside the city.

Input

woman

boy

17
cookie

A woman sits with a boy in an orange hat with a cookie in his hand as he makes
a funny face.

Input

girl

finger

sunglasses

A little girl in pink is holding up her pointer finger and pinkie finger in the air while
holding her sunglasses in the other hand.

Fig. 7. Word attention maps obtained by c-MWP using our image tag classifier. For
each test image, one of its caption annotations from Flickr30k Entities is displayed
below. We show the attention maps for the words in red in each caption. By leveraging
a large-scale weakly labeled dataset, our method can localize a large number of visual
concepts, e.g. objects (cone, sunglasses and cookie), fine-grain categories of people
(woman and boy), body parts (finger) and actions (jumping, running and celebration).

Some example word attention maps are shown in Fig. 7 to demonstrate the
localization ability of our method. As we can see, our method can localize not
only noun phrases but also actions verbs in the text.

5

Conclusion

We propose a probabilistic Winner-Take-All formulation to model the top-down
neural attention for CNN classifiers. Based on our formulation, a novel propagation method, Excitation Backprop, is presented to compute the Marginal
Winning Probability of each neuron. Using Excitation Backprop, highly discriminative attention maps can be efficiently computed by propagating a pair
of contrastive top-down signals via a single backward pass in the network. We
demonstrate the accuracy and the generalizability of our method in a largescale Pointing Game. We further show the usefulness of our method in localizing
dominant objects. Moreover, without using any localization supervision or language model, our neural attention based method attains competitive localization
performance vs. a state-of-the-art fully supervised method on the challenging
Flickr30k Entities dataset.
Acknowledgments. This research was supported in part by Adobe Research, US NSF grants 0910908 and 1029430, and gifts from NVIDIA.

References
1. Koch, C., Ullman, S.: Shifts in selective visual attention: Towards the underlying
neural circuitry. In: Matters of Intelligence. Springer (1987) 115–141

18

J. Zhang et al.

2. Anderson, C.H., Van Essen, D.C.: Shifter circuits: A computational strategy for
dynamic aspects of visual processing. Proceedings of the National Academy of
Sciences 84(17) (1987) 6297–6301
3. Tsotsos, J.K., Culhane, S.M., Wai, W.Y.K., Lai, Y., Davis, N., Nuflo, F.: Modeling
visual attention via selective tuning. Artificial Intelligence 78(1) (1995) 507–545
4. Wolfe, J.M.: Guided search 2.0 a revised model of visual search. Psychonomic
Bulletin & Review 1(2) (1994) 202–238
5. Simonyan, K., Vedaldi, A., Zisserman, A.: Deep inside convolutional networks:
Visualising image classification models and saliency maps. In: ICLR Workshop.
(2014)
6. Zeiler, M.D., Fergus, R.: Visualizing and understanding convolutional networks.
In: ECCV. (2014)
7. Cao, C., Liu, X., Yang, Y., Yu, Y., Wang, J., Wang, Z., Huang, Y., Wang, L.,
Huang, C., Xu, W., et al.: Look and think twice: Capturing top-down visual
attention with feedback convolutional neural networks. In: ICCV. (2015)
8. Zhou, B., Khosla, A., Lapedriza, A., Oliva, A., Torralba, A.: Learning deep features
for discriminative localization. (2016)
9. Bach, S., Binder, A., Montavon, G., Klauschen, F., Müller, K.R., Samek, W.: On
pixel-wise explanations for non-linear classifier decisions by layer-wise relevance
propagation. PloS One 10(7) (2015) e0130140
10. Everingham, M., Van Gool, L., Williams, C.K.I., Winn, J., Zisserman, A.: The
pascal visual object classes (VOC) challenge. International Journal of Computer
Vision 88(2) (June 2010) 303–338
11. Lin, T.Y., Maire, M., Belongie, S., Hays, J., Perona, P., Ramanan, D., Dollár, P.,
Zitnick, C.L.: Microsoft COCO: Common objects in context. In: ECCV. (2014)
12. Plummer, B.A., Wang, L., Cervantes, C.M., Caicedo, J.C., Hockenmaier, J., Lazebnik, S.: Flickr30k entities: Collecting region-to-phrase correspondences for richer
image-to-sentence models. In: CVPR. (2015)
13. Baluch, F., Itti, L.: Mechanisms of top-down attention. Trends in Neurosciences
34(4) (2011) 210–224
14. Treisman, A.M., Gelade, G.: A feature-integration theory of attention. Cognitive
psychology 12(1) (1980) 97–136
15. Desimone, R., Duncan, J.: Neural mechanisms of selective visual attention. Annual
Review of Neuroscience 18(1) (1995) 193–222
16. Reynolds, J.H., Heeger, D.J.: The normalization model of attention. Neuron 61(2)
(2009) 168–185
17. Desimone, R.: Visual attention mediated by biased competition in extrastriate
visual cortex. Philosophical Transactions of the Royal Society of London B: Biological Sciences 353(1373) (1998) 1245–1255
18. Beck, D.M., Kastner, S.: Top-down and bottom-up mechanisms in biasing competition in the human brain. Vision Research 49(10) (2009) 1154–1165
19. Zhou, B., Khosla, A., Lapedriza, A., Oliva, A., Torralba, A.: Object detectors
emerge in deep scene cnns. In: ICLR. (2015)
20. Springenberg, J.T., Dosovitskiy, A., Brox, T., Riedmiller, M.: Striving for simplicity: The all convolutional net. arXiv preprint arXiv:1412.6806 (2014)
21. Oquab, M., Bottou, L., Laptev, I., Sivic, J.: Is object localization for free?-weaklysupervised learning with convolutional neural networks. In: CVPR. (2015)
22. Pathak, D., Krahenbuhl, P., Darrell, T.: Constrained convolutional neural networks
for weakly supervised segmentation. In: ICCV. (2015)
23. Papandreou, G., Chen, L.C., Murphy, K., Yuille, A.L.: Weakly-and semi-supervised
learning of a dcnn for semantic image segmentation. In: ICCV. (2015)

Top-down Neural Attention by Excitation Backprop

19

24. Pinheiro, P.O., Collobert, R.: From image-level to pixel-level labeling with convolutional networks. In: CVPR. (2015)
25. Fang, H., Gupta, S., Iandola, F., Srivastava, R.K., Deng, L., Dollár, P., Gao, J.,
He, X., Mitchell, M., Platt, J.C., et al.: From captions to visual concepts and back.
In: CVPR. (2015)
26. Pinheiro, P.H., Collobert, R.: Recurrent convolutional neural networks for scene
parsing. In: ICLR. (2014)
27. Kemeny, J.G., Snell, J.L., et al.: Finite Markov chains. New York Berlin Heidelberg
Tokyo: Springer-Verlag (1960)
28. Krizhevsky, A., Sutskever, I., Hinton, G.E.: Imagenet classification with deep
convolutional neural networks. In: NIPS. (2012)
29. Simonyan, K., Zisserman, A.: Very deep convolutional networks for large-scale
image recognition. In: ICLR. (2015)
30. Szegedy, C., Liu, W., Jia, Y., Sermanet, P., Reed, S., Anguelov, D., Erhan, D.,
Vanhoucke, V., Rabinovich, A.: Going deeper with convolutions. In: CVPR. (2015)
31. Zhou, B., Lapedriza, A., Xiao, J., Torralba, A., Oliva, A.: Learning deep features
for scene recognition using places database. In: NIPS. (2014)
32. Yosinski, J., Clune, J., Nguyen, A., Fuchs, T., Lipson, H.: Understanding neural
networks through deep visualization. arXiv preprint arXiv:1506.06579 (2015)
33. Clevert, D.A., Unterthiner, T., Hochreiter, S.: Fast and accurate deep network
learning by exponential linear units (elus). In: ICLR. (2016)
34. Caffe: Convolutional architecture for fast feature embedding. In: ACM International Conference on Multimedia. (2014)
35. Chatfield, K., Simonyan, K., Vedaldi, A., Zisserman, A.: Return of the devil in the
details: Delving deep into convolutional nets. In: BMVC. (2014)
36. Russakovsky, O., Deng, J., Su, H., Krause, J., Satheesh, S., Ma, S., Huang, Z.,
Karpathy, A., Khosla, A., Bernstein, M., Berg, A.C., Fei-Fei, L.: ImageNet Large
Scale Visual Recognition Challenge. International Journal of Computer Vision
(IJCV) 115(3) (2015) 211–252
37. Sermanet, P., Eigen, D., Zhang, X., Mathieu, M., Fergus, R., LeCun, Y.: Overfeat:
Integrated recognition, localization and detection using convolutional networks. In:
ICLR. (2014)
38. Zitnick, C.L., Dollár, P.: Edge boxes: Locating object proposals from edges. In:
ECCV. (2014)
39. Arbeláez, P., Pont-Tuset, J., Barron, J., Marques, F., Malik, J.: Multiscale combinatorial grouping. In: CVPR. (2014)

20

J. Zhang et al.

Appendix
A

Speed Performance

60
50
ms

40
30

Excitation Backprop

20

Error Backprop

10
0
poo1 pool2 pool3 pool4 I5b/out

Fig. 8. Speed performance of our implementation of Excitation Backprop compared
with error backpropagation in GPU mode. The speed is measured on a NVIDIA K40c
GPU for a single 224X335 image (without using batch mode). The x-axis represents
the layer at which the tested method terminates.

The most time-consuming operations in Excitation Backprop are the second
and fourth steps in Alg. 1, which correspond to the forward and backward
operations of the layer in Caffe. Therefore, the computational complexity of
Excitation Backprop is about twice the complexity of error backpropagation,
but in practice we only perform the Excitation Backprop to some intermediate
layer. The speed performance of our implementation of Excitation Backprop is
reported in Fig. 8 for GoogleNet.

B

Details about the Stock6M Dataset

We provide more details about the Stock6M dataset used for training the image
tag classifier.
Data collection and cleaning. We crawl an initial set of about 17M thumbnail images and their tags from a stock image website. This website provides
professional photos and illustrations for commercial usage. Each image on the
website has a list of tags used for text-based image search. Then we use the
most frequent 18157 tags for our dictionary using a frequency threshold of 1000.
Most of these tags are unigrams. We remove images with fewer than five tags.
We empirically find that some images’ tags are in alphabetical order, and the
quality of these tags is usually poor. Thus, we remove these images, too. We
further perform a duplicate detection based on tag information and user ids,
since many images uploaded by the same user can be very similar. For each user
id, we check the tag list of each of its images. We remove an image if its first
five tags are very similar to the first five tags of a previously seen image of the
same user id. The two sets of tags are considered to be similar if they have more

Top-down Neural Attention by Excitation Backprop

21

Fig. 9. Stock6M: visualization of the most frequent tags in Stock6M.

adult, alluring, american, banknote,
business, businessman, buying, cash,
catch, caucasian, credit, currency, dollar,
economy, excited, finance, financial,
happy, holding, hundred, loan, male, man,
money, …

smiling, friends, men, women, travel,
vacation, book, guide, holidays, traveling,
tourism, tourists, travelers, trip, journey,
sightseeing, tour, bus, together, summer,
friendship, sunglasses, eyewear, shades,
happiness, young, people, person, team,
hanging, out, having, fun, lifestyle, …

book, bunch, correspondence, erudition,
group, heap, information, journal,
journalist, knowledge, library, literature,
magazine, media, old, page, paper,
periodical, pile, press, publish, reading,
stack, subscription, …

Fig. 10. Stock6M: example images and tags from the stock image website. Note that
the first and third images’ tags are in alphabetical order. In contrast, the second image’s
tags are not in alphabetical order and their ordering roughly reflects the relevance to
the image. Therefore, we remove images whose tags are in alphabetical order.

than three overlaps. After all these steps, we end up with a dataset of about 6M
images.
Frequent Tags and Example Images. We visualize the most frequent
tags in a word cloud (Fig. 9). We can see that many frequent tags are related
to humans, for example woman, man, beautiful, happy, etc. There are also a
lot of non-visual tags like healthy, business, holiday and lifestyle. Some
example images and the corresponding user tags are shown in Fig 10.

